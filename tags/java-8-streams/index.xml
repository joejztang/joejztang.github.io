<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Java 8 Streams on 130l</title><link>http://www.example.com/tags/java-8-streams/</link><description>Recent content in Java 8 Streams on 130l</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sat, 24 Mar 2018 15:50:09 +0000</lastBuildDate><atom:link href="http://www.example.com/tags/java-8-streams/index.xml" rel="self" type="application/rss+xml"/><item><title>java stream introduction</title><link>http://www.example.com/posts/java-stream-introduction/</link><pubDate>Sat, 24 Mar 2018 15:50:09 +0000</pubDate><guid>http://www.example.com/posts/java-stream-introduction/</guid><description>&lt;p&gt;Background: multi-core processors are available at ease, a Java developer has to write parallel code processing that can be pretty error-prone.&lt;/p&gt;
&lt;p&gt;Solutions:
Java 8 introduced the concept of stream that lets the developer to process data declaratively and leverage multicore architecture without the need to write any specific code for it.&lt;/p&gt;</description></item></channel></rss>