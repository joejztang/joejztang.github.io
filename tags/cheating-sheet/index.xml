<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Cheating Sheet on 130l</title><link>http://www.example.com/tags/cheating-sheet/</link><description>Recent content in Cheating Sheet on 130l</description><generator>Hugo</generator><language>en</language><lastBuildDate>Sun, 02 Feb 2020 15:31:09 +0000</lastBuildDate><atom:link href="http://www.example.com/tags/cheating-sheet/index.xml" rel="self" type="application/rss+xml"/><item><title>graph 概念及总结</title><link>http://www.example.com/posts/graph-%E6%A6%82%E5%BF%B5%E5%8F%8A%E6%80%BB%E7%BB%93/</link><pubDate>Sun, 02 Feb 2020 15:31:09 +0000</pubDate><guid>http://www.example.com/posts/graph-%E6%A6%82%E5%BF%B5%E5%8F%8A%E6%80%BB%E7%BB%93/</guid><description>&lt;h2 id="概念"&gt;
 概念
 &lt;a class="heading-link" href="#%e6%a6%82%e5%bf%b5"&gt;
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading"&gt;&lt;/i&gt;
 &lt;span class="sr-only"&gt;Link to heading&lt;/span&gt;
 &lt;/a&gt;
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;vertex 点; edge 线&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;v1 -&amp;gt; v2, v3, &amp;hellip; (被 vertex 指到的 v), 这里指的是 v2, v3, 被称为 v1 的 successors.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;v1 -&amp;gt; v2, v3, &amp;hellip; ( 指向 v2, v3 的 v), 这里指的是 v1, 被称为 v2, v3 的 predecessors.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;out degree: 从 vertex 指出去的箭头个数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;in degree: 从别的 v 指向当前 v 的箭头个数&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;degree: 与 v 的连线总数&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;degree 在解题上有很大的用处. 比如: 如果图和树结合的题目, 当 out degree 为0 时,我们就能认定他是 leaf.&lt;/p&gt;</description></item><item><title>elasticsearch cheating sheet</title><link>http://www.example.com/posts/elasticsearch-cheating-sheet/</link><pubDate>Tue, 01 Oct 2019 14:03:03 +0000</pubDate><guid>http://www.example.com/posts/elasticsearch-cheating-sheet/</guid><description>&lt;h2 id="concepts"&gt;
 concepts
 &lt;a class="heading-link" href="#concepts"&gt;
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading"&gt;&lt;/i&gt;
 &lt;span class="sr-only"&gt;Link to heading&lt;/span&gt;
 &lt;/a&gt;
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;cluster: a collection of nodes&lt;/li&gt;
&lt;li&gt;node: part to store data&lt;/li&gt;
&lt;li&gt;index: a collection of similar documents&lt;/li&gt;
&lt;li&gt;type: a category or a partition of indexes&lt;/li&gt;
&lt;li&gt;document: json formated data&lt;/li&gt;
&lt;li&gt;shard/replica: shard of a &lt;strong&gt;portion&lt;/strong&gt; of indexes, whereas replica is a segment of an index.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src="http://www.example.com/images/visual-es-concepts.PNG" alt="concepts visual"&gt;&lt;/p&gt;
&lt;h2 id="roles-of-node"&gt;
 roles of node
 &lt;a class="heading-link" href="#roles-of-node"&gt;
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading"&gt;&lt;/i&gt;
 &lt;span class="sr-only"&gt;Link to heading&lt;/span&gt;
 &lt;/a&gt;
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;master&lt;/li&gt;
&lt;li&gt;data&lt;/li&gt;
&lt;li&gt;ingest: it somewhat like simplified &lt;code&gt;logstash&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;ml&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;by default, it&amp;rsquo;s &lt;code&gt;dim&lt;/code&gt; permission. for different size of cluster, especially medium and large size, we could have dedicated master nodes.&lt;/p&gt;</description></item><item><title>introduction to kubernetes</title><link>http://www.example.com/posts/introduction-to-kubernetes/</link><pubDate>Fri, 19 Apr 2019 16:54:16 +0000</pubDate><guid>http://www.example.com/posts/introduction-to-kubernetes/</guid><description>&lt;h2 id="kubernetes-architecture"&gt;
 kubernetes architecture
 &lt;a class="heading-link" href="#kubernetes-architecture"&gt;
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading"&gt;&lt;/i&gt;
 &lt;span class="sr-only"&gt;Link to heading&lt;/span&gt;
 &lt;/a&gt;
&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;one or more master nodes&lt;/li&gt;
&lt;li&gt;one or more worker nodes&lt;/li&gt;
&lt;li&gt;distributed key - value storage (for state purposes)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id="master-nodes"&gt;
 master nodes
 &lt;a class="heading-link" href="#master-nodes"&gt;
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading"&gt;&lt;/i&gt;
 &lt;span class="sr-only"&gt;Link to heading&lt;/span&gt;
 &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;master nodes are entry point for administrative tasks. if there are more master nodes, then it would be in HA (high availability) mode.&lt;/p&gt;
&lt;p&gt;in this time, one of them is a &amp;rsquo;leader&amp;rsquo; and others are followers.&lt;/p&gt;</description></item><item><title>git-cheating-sheet</title><link>http://www.example.com/posts/git-cheating-sheet/</link><pubDate>Fri, 01 Mar 2019 17:40:26 +0000</pubDate><guid>http://www.example.com/posts/git-cheating-sheet/</guid><description>&lt;h2 id="backtracking"&gt;
 backtracking
 &lt;a class="heading-link" href="#backtracking"&gt;
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading"&gt;&lt;/i&gt;
 &lt;span class="sr-only"&gt;Link to heading&lt;/span&gt;
 &lt;/a&gt;
&lt;/h2&gt;
&lt;h3 id="unmodifying"&gt;
 unmodifying
 &lt;a class="heading-link" href="#unmodifying"&gt;
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading"&gt;&lt;/i&gt;
 &lt;span class="sr-only"&gt;Link to heading&lt;/span&gt;
 &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;before backtrack, show details of changes by using&lt;/p&gt;
&lt;p&gt;&lt;code&gt;git show HEAD&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;then, I made some changes to this file and then I realize that I did a silly thing.&lt;/p&gt;
&lt;p&gt;I need to be back!!!&lt;/p&gt;
&lt;p&gt;what I do is the following: &lt;code&gt;git checkout HEAD &amp;lt;filename&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Then you can check git status, it back to the last commit.&lt;/p&gt;</description></item><item><title>sql-server-cheating-sheet</title><link>http://www.example.com/posts/sql-server-cheating-sheet/</link><pubDate>Wed, 27 Feb 2019 14:11:26 +0000</pubDate><guid>http://www.example.com/posts/sql-server-cheating-sheet/</guid><description>&lt;h2 id="overpartition-by--vs-group-by"&gt;
 OVER(PARTITION BY &amp;hellip;) VS. GROUP BY
 &lt;a class="heading-link" href="#overpartition-by--vs-group-by"&gt;
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading"&gt;&lt;/i&gt;
 &lt;span class="sr-only"&gt;Link to heading&lt;/span&gt;
 &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;group by comes with aggregate functions. they appear in pairs.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;group by ~= partition by&lt;/strong&gt;, group by will return &lt;strong&gt;one row per group&lt;/strong&gt; of many groups, however partition by will return &lt;strong&gt;one row per underlying row, not one per group.&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id="schema"&gt;
 Schema
 &lt;a class="heading-link" href="#schema"&gt;
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading"&gt;&lt;/i&gt;
 &lt;span class="sr-only"&gt;Link to heading&lt;/span&gt;
 &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;schema can be used to control the accesses.&lt;/p&gt;</description></item><item><title>c sharp cheating sheet</title><link>http://www.example.com/posts/c-sharp-cheating-sheet/</link><pubDate>Wed, 27 Feb 2019 12:59:41 +0000</pubDate><guid>http://www.example.com/posts/c-sharp-cheating-sheet/</guid><description>&lt;h2 id="dll-vs-exe"&gt;
 DLL vs EXE
 &lt;a class="heading-link" href="#dll-vs-exe"&gt;
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading"&gt;&lt;/i&gt;
 &lt;span class="sr-only"&gt;Link to heading&lt;/span&gt;
 &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;Dynamic Linked Library, cannot run individually.
Executable file have Main function.&lt;/p&gt;
&lt;h2 id="naming-conventions"&gt;
 Naming Conventions
 &lt;a class="heading-link" href="#naming-conventions"&gt;
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading"&gt;&lt;/i&gt;
 &lt;span class="sr-only"&gt;Link to heading&lt;/span&gt;
 &lt;/a&gt;
&lt;/h2&gt;
&lt;table&gt;
 &lt;thead&gt;
 &lt;tr&gt;
 &lt;th&gt;Object Name&lt;/th&gt;
 &lt;th&gt;Notation&lt;/th&gt;
 &lt;th&gt;Length&lt;/th&gt;
 &lt;th&gt;Plural&lt;/th&gt;
 &lt;th&gt;Prefix&lt;/th&gt;
 &lt;th&gt;Suffix&lt;/th&gt;
 &lt;th&gt;Abbreviation&lt;/th&gt;
 &lt;th&gt;Char Mask&lt;/th&gt;
 &lt;th&gt;Underscores&lt;/th&gt;
 &lt;/tr&gt;
 &lt;/thead&gt;
 &lt;tbody&gt;
 &lt;tr&gt;
 &lt;td&gt;Class name&lt;/td&gt;
 &lt;td&gt;PascalCase&lt;/td&gt;
 &lt;td&gt;128&lt;/td&gt;
 &lt;td&gt;No&lt;/td&gt;
 &lt;td&gt;No&lt;/td&gt;
 &lt;td&gt;Yes&lt;/td&gt;
 &lt;td&gt;No&lt;/td&gt;
 &lt;td&gt;[A-z][0-9]&lt;/td&gt;
 &lt;td&gt;No&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;Constructor name&lt;/td&gt;
 &lt;td&gt;PascalCase&lt;/td&gt;
 &lt;td&gt;128&lt;/td&gt;
 &lt;td&gt;No&lt;/td&gt;
 &lt;td&gt;No&lt;/td&gt;
 &lt;td&gt;Yes&lt;/td&gt;
 &lt;td&gt;No&lt;/td&gt;
 &lt;td&gt;[A-z][0-9]&lt;/td&gt;
 &lt;td&gt;No&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;Method name&lt;/td&gt;
 &lt;td&gt;PascalCase&lt;/td&gt;
 &lt;td&gt;128&lt;/td&gt;
 &lt;td&gt;Yes&lt;/td&gt;
 &lt;td&gt;No&lt;/td&gt;
 &lt;td&gt;No&lt;/td&gt;
 &lt;td&gt;No&lt;/td&gt;
 &lt;td&gt;[A-z][0-9]&lt;/td&gt;
 &lt;td&gt;No&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;Method arguments&lt;/td&gt;
 &lt;td&gt;camelCase&lt;/td&gt;
 &lt;td&gt;128&lt;/td&gt;
 &lt;td&gt;Yes&lt;/td&gt;
 &lt;td&gt;No&lt;/td&gt;
 &lt;td&gt;No&lt;/td&gt;
 &lt;td&gt;Yes&lt;/td&gt;
 &lt;td&gt;[A-z][0-9]&lt;/td&gt;
 &lt;td&gt;No&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;Local variables&lt;/td&gt;
 &lt;td&gt;camelCase&lt;/td&gt;
 &lt;td&gt;50&lt;/td&gt;
 &lt;td&gt;Yes&lt;/td&gt;
 &lt;td&gt;No&lt;/td&gt;
 &lt;td&gt;No&lt;/td&gt;
 &lt;td&gt;Yes&lt;/td&gt;
 &lt;td&gt;[A-z][0-9]&lt;/td&gt;
 &lt;td&gt;No&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;Constants name&lt;/td&gt;
 &lt;td&gt;PascalCase&lt;/td&gt;
 &lt;td&gt;50&lt;/td&gt;
 &lt;td&gt;No&lt;/td&gt;
 &lt;td&gt;No&lt;/td&gt;
 &lt;td&gt;No&lt;/td&gt;
 &lt;td&gt;No&lt;/td&gt;
 &lt;td&gt;[A-z][0-9]&lt;/td&gt;
 &lt;td&gt;No&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;Field name&lt;/td&gt;
 &lt;td&gt;camelCase&lt;/td&gt;
 &lt;td&gt;50&lt;/td&gt;
 &lt;td&gt;Yes&lt;/td&gt;
 &lt;td&gt;No&lt;/td&gt;
 &lt;td&gt;No&lt;/td&gt;
 &lt;td&gt;Yes&lt;/td&gt;
 &lt;td&gt;[A-z][0-9]&lt;/td&gt;
 &lt;td&gt;Yes&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;Properties name&lt;/td&gt;
 &lt;td&gt;PascalCase&lt;/td&gt;
 &lt;td&gt;50&lt;/td&gt;
 &lt;td&gt;Yes&lt;/td&gt;
 &lt;td&gt;No&lt;/td&gt;
 &lt;td&gt;No&lt;/td&gt;
 &lt;td&gt;Yes&lt;/td&gt;
 &lt;td&gt;[A-z][0-9]&lt;/td&gt;
 &lt;td&gt;No&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;Delegate name&lt;/td&gt;
 &lt;td&gt;PascalCase&lt;/td&gt;
 &lt;td&gt;128&lt;/td&gt;
 &lt;td&gt;No&lt;/td&gt;
 &lt;td&gt;No&lt;/td&gt;
 &lt;td&gt;Yes&lt;/td&gt;
 &lt;td&gt;Yes&lt;/td&gt;
 &lt;td&gt;[A-z]&lt;/td&gt;
 &lt;td&gt;No&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;Enum type name&lt;/td&gt;
 &lt;td&gt;PascalCase&lt;/td&gt;
 &lt;td&gt;128&lt;/td&gt;
 &lt;td&gt;Yes&lt;/td&gt;
 &lt;td&gt;No&lt;/td&gt;
 &lt;td&gt;No&lt;/td&gt;
 &lt;td&gt;No&lt;/td&gt;
 &lt;td&gt;[A-z]&lt;/td&gt;
 &lt;td&gt;No&lt;/td&gt;
 &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id="fields-vs-properties"&gt;
 &lt;code&gt;fields&lt;/code&gt; vs &lt;code&gt;properties&lt;/code&gt;
 &lt;a class="heading-link" href="#fields-vs-properties"&gt;
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading"&gt;&lt;/i&gt;
 &lt;span class="sr-only"&gt;Link to heading&lt;/span&gt;
 &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;properties exposes fields. meaning properties have getter and setter whereas fields store actual data.&lt;/p&gt;</description></item><item><title>google dataflow introduction</title><link>http://www.example.com/posts/google-dataflow-introduction/</link><pubDate>Wed, 27 Feb 2019 10:13:36 +0000</pubDate><guid>http://www.example.com/posts/google-dataflow-introduction/</guid><description>&lt;h2 id="data-analytics-products"&gt;
 data analytics products
 &lt;a class="heading-link" href="#data-analytics-products"&gt;
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading"&gt;&lt;/i&gt;
 &lt;span class="sr-only"&gt;Link to heading&lt;/span&gt;
 &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;&lt;img src="http://www.example.com/images/data_trans_with_dataflow.png" alt="cloud_dataflow"&gt;&lt;/p&gt;
&lt;p&gt;cloud dataflow is a data pipeline that transform data from one form to another, as you can see in above paradiagm.&lt;/p&gt;
&lt;p&gt;according to what I read so far, dataflow build on top of &lt;strong&gt;apache beam&lt;/strong&gt;.&lt;/p&gt;</description></item><item><title>pandas cheat sheet</title><link>http://www.example.com/posts/pandas-cheat-sheet/</link><pubDate>Mon, 25 Feb 2019 09:40:09 +0000</pubDate><guid>http://www.example.com/posts/pandas-cheat-sheet/</guid><description>&lt;h2 id="dimension"&gt;
 dimension
 &lt;a class="heading-link" href="#dimension"&gt;
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading"&gt;&lt;/i&gt;
 &lt;span class="sr-only"&gt;Link to heading&lt;/span&gt;
 &lt;/a&gt;
&lt;/h2&gt;
&lt;table&gt;
 &lt;thead&gt;
 &lt;tr&gt;
 &lt;th&gt;Data Structure&lt;/th&gt;
 &lt;th&gt;Dimensions&lt;/th&gt;
 &lt;th&gt;Description&lt;/th&gt;
 &lt;/tr&gt;
 &lt;/thead&gt;
 &lt;tbody&gt;
 &lt;tr&gt;
 &lt;td&gt;Series&lt;/td&gt;
 &lt;td&gt;1&lt;/td&gt;
 &lt;td&gt;1d array&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;Data Frames&lt;/td&gt;
 &lt;td&gt;2&lt;/td&gt;
 &lt;td&gt;2d array&lt;/td&gt;
 &lt;/tr&gt;
 &lt;tr&gt;
 &lt;td&gt;Panel&lt;/td&gt;
 &lt;td&gt;3&lt;/td&gt;
 &lt;td&gt;3d array&lt;/td&gt;
 &lt;/tr&gt;
 &lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;Series: size immutable, data mutable&lt;/li&gt;
&lt;li&gt;Data Frames: size immutable, data mutable&lt;/li&gt;
&lt;li&gt;Panel: size mutable, data mutable&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To sum, all the data structures are data mutable.&lt;/p&gt;
&lt;h2 id="data-structures"&gt;
 Data Structures
 &lt;a class="heading-link" href="#data-structures"&gt;
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading"&gt;&lt;/i&gt;
 &lt;span class="sr-only"&gt;Link to heading&lt;/span&gt;
 &lt;/a&gt;
&lt;/h2&gt;
&lt;h3 id="pandasseries"&gt;
 pandas.Series
 &lt;a class="heading-link" href="#pandasseries"&gt;
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading"&gt;&lt;/i&gt;
 &lt;span class="sr-only"&gt;Link to heading&lt;/span&gt;
 &lt;/a&gt;
&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;pandas.Series(data, index, dtype, copy)&lt;/code&gt;&lt;/p&gt;</description></item><item><title>golang cheating sheet</title><link>http://www.example.com/posts/golang-cheating-sheet/</link><pubDate>Fri, 02 Nov 2018 15:04:26 +0000</pubDate><guid>http://www.example.com/posts/golang-cheating-sheet/</guid><description>&lt;h1 id="overview"&gt;
 overview
 &lt;a class="heading-link" href="#overview"&gt;
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading"&gt;&lt;/i&gt;
 &lt;span class="sr-only"&gt;Link to heading&lt;/span&gt;
 &lt;/a&gt;
&lt;/h1&gt;
&lt;h2 id="go-is-a-compiled-lang"&gt;
 go is a compiled lang
 &lt;a class="heading-link" href="#go-is-a-compiled-lang"&gt;
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading"&gt;&lt;/i&gt;
 &lt;span class="sr-only"&gt;Link to heading&lt;/span&gt;
 &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;although go is a compiled language, it still has a lot of good features of interpreted language, like Garbage Collections.&lt;/p&gt;
&lt;h2 id="class-of-go---structs"&gt;
 class of go - &lt;code&gt;structs&lt;/code&gt;
 &lt;a class="heading-link" href="#class-of-go---structs"&gt;
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading"&gt;&lt;/i&gt;
 &lt;span class="sr-only"&gt;Link to heading&lt;/span&gt;
 &lt;/a&gt;
&lt;/h2&gt;
&lt;p&gt;unlike &lt;code&gt;structs&lt;/code&gt; in C which is a combination of variables, structs in go is a combination of variables and methods.&lt;/p&gt;</description></item><item><title>javascript cheating sheet</title><link>http://www.example.com/posts/javascript-cheating-sheet/</link><pubDate>Mon, 06 Aug 2018 22:44:51 +0000</pubDate><guid>http://www.example.com/posts/javascript-cheating-sheet/</guid><description>&lt;h1 id="写在前头"&gt;
 写在前头
 &lt;a class="heading-link" href="#%e5%86%99%e5%9c%a8%e5%89%8d%e5%a4%b4"&gt;
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading"&gt;&lt;/i&gt;
 &lt;span class="sr-only"&gt;Link to heading&lt;/span&gt;
 &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;还是得要膜拜一下&lt;a href="https://www.liaoxuefeng.com/wiki/001434446689867b27157e896e74d51a89c25cc8b43bdb3000" class="external-link" target="_blank" rel="noopener"&gt;廖雪峰大神&lt;/a&gt;, 原文都在这了. 这篇帖子只是单纯的笔记整理&lt;/p&gt;
&lt;h1 id="数据类型"&gt;
 数据类型
 &lt;a class="heading-link" href="#%e6%95%b0%e6%8d%ae%e7%b1%bb%e5%9e%8b"&gt;
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading"&gt;&lt;/i&gt;
 &lt;span class="sr-only"&gt;Link to heading&lt;/span&gt;
 &lt;/a&gt;
&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;number: 不区分整数和浮点数&lt;/li&gt;
&lt;li&gt;字符串&lt;/li&gt;
&lt;li&gt;布尔值: &lt;code&gt;true&lt;/code&gt;/&lt;code&gt;false&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h1 id="比较运算符--vs-"&gt;
 比较运算符, == vs. ===
 &lt;a class="heading-link" href="#%e6%af%94%e8%be%83%e8%bf%90%e7%ae%97%e7%ac%a6--vs-"&gt;
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading"&gt;&lt;/i&gt;
 &lt;span class="sr-only"&gt;Link to heading&lt;/span&gt;
 &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;javascript 允许对任意数据类型作比较&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#e6edf3;background-color:#0d1117;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-javascript" data-lang="javascript"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#79c0ff"&gt;false&lt;/span&gt; &lt;span style="color:#ff7b72;font-weight:bold"&gt;==&lt;/span&gt; &lt;span style="color:#a5d6ff"&gt;0&lt;/span&gt; &lt;span style="color:#8b949e;font-style:italic"&gt;// true
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#8b949e;font-style:italic"&gt;&lt;/span&gt;&lt;span style="color:#79c0ff"&gt;false&lt;/span&gt; &lt;span style="color:#ff7b72;font-weight:bold"&gt;===&lt;/span&gt; &lt;span style="color:#a5d6ff"&gt;0&lt;/span&gt; &lt;span style="color:#8b949e;font-style:italic"&gt;// false
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;==&lt;/code&gt; 会自动转换数据类型再比较 (&lt;strong&gt;不推荐使用&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;===&lt;/code&gt; 不会转换数据类型 (&lt;strong&gt;应该坚持使用&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;NaN&lt;/code&gt; 与所有值(包括自己都不同), 只有通过 &lt;code&gt;isNaN()&lt;/code&gt; 才能判断.&lt;/li&gt;
&lt;li&gt;比较浮点数时候, 要计算他们的绝对值是不是小于某个阈值&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="null-vs-undefined"&gt;
 null vs. undefined
 &lt;a class="heading-link" href="#null-vs-undefined"&gt;
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading"&gt;&lt;/i&gt;
 &lt;span class="sr-only"&gt;Link to heading&lt;/span&gt;
 &lt;/a&gt;
&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;null&lt;/code&gt;, 空. 它不等于0, 也不等于&lt;code&gt;''&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;undefined&lt;/code&gt; 表示值未定义, 只有在未规定 return 值的时候/object 中没有这个 prop 时候,会返回&lt;code&gt;undefined&lt;/code&gt;, 其他时候我都会用&lt;code&gt; null&lt;/code&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id="javascript-中的对象"&gt;
 javascript 中的对象
 &lt;a class="heading-link" href="#javascript-%e4%b8%ad%e7%9a%84%e5%af%b9%e8%b1%a1"&gt;
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading"&gt;&lt;/i&gt;
 &lt;span class="sr-only"&gt;Link to heading&lt;/span&gt;
 &lt;/a&gt;
&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;unsorted key-value pair&lt;/strong&gt;&lt;/p&gt;</description></item><item><title>git merge</title><link>http://www.example.com/posts/git-merge/</link><pubDate>Thu, 05 Apr 2018 12:10:50 +0000</pubDate><guid>http://www.example.com/posts/git-merge/</guid><description>&lt;p&gt;command &lt;code&gt;git merge&lt;/code&gt; is usually used in conjunction with &lt;code&gt;git checkout&lt;/code&gt; and &lt;code&gt;git branch -d&lt;/code&gt;(for deleting obsolete branches).&lt;/p&gt;
&lt;p&gt;credits to &lt;a href="https://www.atlassian.com/git/tutorials/using-branches/git-merge" class="external-link" target="_blank" rel="noopener"&gt;Atlassian Bitbucket Tutorials&lt;/a&gt;&lt;/p&gt;
&lt;h3 id="prepare-to-merge"&gt;
 prepare to merge
 &lt;a class="heading-link" href="#prepare-to-merge"&gt;
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading"&gt;&lt;/i&gt;
 &lt;span class="sr-only"&gt;Link to heading&lt;/span&gt;
 &lt;/a&gt;
&lt;/h3&gt;
&lt;h4 id="confirm-the-receiving-branch"&gt;
 confirm the receiving branch
 &lt;a class="heading-link" href="#confirm-the-receiving-branch"&gt;
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading"&gt;&lt;/i&gt;
 &lt;span class="sr-only"&gt;Link to heading&lt;/span&gt;
 &lt;/a&gt;
&lt;/h4&gt;
&lt;p&gt;use &lt;code&gt;git checkout &amp;lt;receiving_branch&amp;gt;&lt;/code&gt; to switch to receiving branch. In some case, I want to merge to master so that I execute &lt;code&gt;git checkout master&lt;/code&gt;&lt;/p&gt;</description></item><item><title>git common commands</title><link>http://www.example.com/posts/git-common-commands/</link><pubDate>Wed, 04 Apr 2018 14:20:18 +0000</pubDate><guid>http://www.example.com/posts/git-common-commands/</guid><description>&lt;p&gt;some comman git commands&lt;/p&gt;</description></item><item><title>git checkout reset revert branch</title><link>http://www.example.com/posts/git-checkout-reset-revert-branch/</link><pubDate>Wed, 04 Apr 2018 12:14:54 +0000</pubDate><guid>http://www.example.com/posts/git-checkout-reset-revert-branch/</guid><description>&lt;p&gt;Besides some very useful git commands, such as &lt;code&gt;git add&lt;/code&gt;, &lt;code&gt;git status&lt;/code&gt;, &lt;code&gt;git commit&lt;/code&gt;, etc., there are three additional commands that gives more flexibility to your work&amp;mdash; they are &lt;code&gt;git reset&lt;/code&gt;, &lt;code&gt;git checkout&lt;/code&gt; and &lt;code&gt;git revert&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;credit to &lt;a href="https://www.atlassian.com/git/tutorials/resetting-checking-out-and-reverting" class="external-link" target="_blank" rel="noopener"&gt;Atlassian Bitbucket tutorials&lt;/a&gt;&lt;/p&gt;</description></item><item><title>linear algebra cheating sheet</title><link>http://www.example.com/posts/linear-algebra-cheating-sheet/</link><pubDate>Thu, 22 Mar 2018 11:07:57 +0000</pubDate><guid>http://www.example.com/posts/linear-algebra-cheating-sheet/</guid><description>&lt;p&gt;This cheating sheet is only computer/Machine Learning/Deep Learning wise.&lt;/p&gt;
&lt;p&gt;I have read &lt;a href="http://tutorial.math.lamar.edu" class="external-link" target="_blank" rel="noopener"&gt;Paul Dawkin&lt;/a&gt;&amp;rsquo;s previous contents and accumulated some gists that I found useful. (content seems not to be there anymore, for more infomation, please contact the author)&lt;/p&gt;</description></item><item><title>python3 cheathing sheet</title><link>http://www.example.com/posts/python3-cheathing-sheet/</link><pubDate>Thu, 05 Oct 2017 22:35:25 +0000</pubDate><guid>http://www.example.com/posts/python3-cheathing-sheet/</guid><description>&lt;p&gt;python3 is not compatible with lower version of python e.g. python2.x. Listed are some python basics and differences between python2 and python3.&lt;/p&gt;</description></item><item><title>hexo cheating sheet</title><link>http://www.example.com/posts/hexo-cheating-sheet/</link><pubDate>Thu, 28 Sep 2017 19:53:00 +0000</pubDate><guid>http://www.example.com/posts/hexo-cheating-sheet/</guid><description>&lt;h1 id="hexo-system-command"&gt;
 hexo system command
 &lt;a class="heading-link" href="#hexo-system-command"&gt;
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading"&gt;&lt;/i&gt;
 &lt;span class="sr-only"&gt;Link to heading&lt;/span&gt;
 &lt;/a&gt;
&lt;/h1&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;npm install hexo -g #Install hexo 
npm update hexo -g #Upgrade hexo 
hexo init #Initialize
&lt;/code&gt;&lt;/pre&gt;&lt;h1 id="hexo-post-related"&gt;
 hexo post related
 &lt;a class="heading-link" href="#hexo-post-related"&gt;
 &lt;i class="fa-solid fa-link" aria-hidden="true" title="Link to heading"&gt;&lt;/i&gt;
 &lt;span class="sr-only"&gt;Link to heading&lt;/span&gt;
 &lt;/a&gt;
&lt;/h1&gt;
&lt;pre tabindex="0"&gt;&lt;code&gt;hexo n &amp;#34;my post&amp;#34; == hexo new &amp;#34;my post&amp;#34; #create a new post
hexo p &amp;#34;my post&amp;#34; == hexo publish &amp;#34;my post&amp;#34; #publish
hexo g == hexo generate
hexo s == hexo server #start server to preview
hexo d == hexo deploy
&lt;/code&gt;&lt;/pre&gt;</description></item></channel></rss>